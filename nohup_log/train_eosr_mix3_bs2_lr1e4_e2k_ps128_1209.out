  0%|          | 0/324 [00:00<?, ?it/s]Namespace(batchSize=2, checkpoint='./checkpoints/', cuda=True, data_root='../../datasets/raw/eosr/burst7/', decay_epoch=1000, div=88800, lr=0.0001, model='full_mix3_deep_encoder_decoder', n_epoch=2000, name='full_mix3_deep_encoder_decoder', resume='', size=128, start_epoch=1, threads=4)
epoch = 1 lr = 0.0001
/home/chencai/anaconda3/lib/python3.6/site-packages/torch/nn/functional.py:2479: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
/home/chencai/anaconda3/lib/python3.6/site-packages/torch/nn/functional.py:1339: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
Traceback (most recent call last):
  File "train.py", line 119, in <module>
    output, loss = model(data, label)
  File "/home/chencai/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/chencai/anaconda3/lib/python3.6/site-packages/torch/nn/parallel/data_parallel.py", line 152, in forward
    outputs = self.parallel_apply(replicas, inputs, kwargs)
  File "/home/chencai/anaconda3/lib/python3.6/site-packages/torch/nn/parallel/data_parallel.py", line 162, in parallel_apply
    return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])
  File "/home/chencai/anaconda3/lib/python3.6/site-packages/torch/nn/parallel/parallel_apply.py", line 85, in parallel_apply
    output.reraise()
  File "/home/chencai/anaconda3/lib/python3.6/site-packages/torch/_utils.py", line 369, in reraise
    raise self.exc_type(msg)
AttributeError: Caught AttributeError in replica 0 on device 0.
Original Traceback (most recent call last):
  File "/home/chencai/anaconda3/lib/python3.6/site-packages/torch/nn/parallel/parallel_apply.py", line 60, in _worker
    output = module(*input, **kwargs)
  File "/home/chencai/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/chencai/pycharm_remote/RAW2RGBNet/models/full_mix3_deep_encoder_decoder.py", line 189, in forward
    output = torch.minimum(torch.maximum(output,
AttributeError: module 'torch' has no attribute 'minimum'

  0%|          | 0/324 [00:13<?, ?it/s]